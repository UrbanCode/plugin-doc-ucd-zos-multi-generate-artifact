{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>The z/OS Multi Generate Artifact Information plug-in scans version artifacts and generates text based on a template. You can use the generated output text as input to subsequent steps. The plug-in processes data sets and members in a component version.</p> <p>This plug-in is an extension of the z/OS Utility plug-in for generating artifact information. The z/OS Multiple Generate Artifact Information plug-in have additional features given below.</p> <ul> <li>Ability to set multiple templates to multiple properties</li> <li>Ability to generate multiple properties using one step</li> </ul> <p>This plug-in contains one step:</p> <ul> <li>Generate Multiple Artifact Information</li> </ul> <p>Use the Generate Multiple Artifact Information step to select a set of artifacts to process by applying filters on data set names, member names, deployment types, and custom properties for each output property.</p>"},{"location":"#compatibility","title":"Compatibility","text":"<p>This plug-in requires UrbanCode Deploy version 6.1.1 or later and an UrbanCode Deploy agent on z/OS.</p> <p>This plug-in works with IBM z/OS version 1.9 or later.</p>"},{"location":"#step-palette","title":"Step palette","text":"<p>To access this plug-in in the palette, click Utilities &gt; zOS Multi Generate Artifact Information.</p>"},{"location":"#installation","title":"Installation","text":"<p>This plug-in is installed when installing IBM UrbanCode Deploy. When new plug-in versions are available, follow the installation instructions to update the plug-in.</p>"},{"location":"#history","title":"History","text":""},{"location":"#version-9","title":"Version 9","text":"<ul> <li>Minor code improvements</li> <li>Added support for single source to multiple target datasets mapping deployments</li> </ul>"},{"location":"#version-8","title":"Version 8","text":"<ul> <li>Added support for Directory/File and Generic artifacts</li> <li>Added check for Target Dataset Filter to allow only dataset or member loop types</li> <li>Removed Jettison Library with vulnerability</li> <li>Removed unused libraries from plugin to reduce overall plugin size</li> <li>Fixed stream error and minor improvements</li> </ul>"},{"location":"#version-7","title":"Version 7","text":"<ul> <li>Added new loop type to delete PDS member excluding missing PDS members</li> <li>Fixed issue when backup is disabled during deployment</li> <li>Minor improvements</li> </ul>"},{"location":"#version-6","title":"Version 6","text":"<ul> <li>Minor improvements in plugin name and description</li> <li>PH46505 Fixed issue with filtering containers mapped to same Target PDS in Generate Artifact step</li> <li>Fixed issue with deleted containers for generating artifact information</li> </ul>"},{"location":"#version-5","title":"Version 5","text":"<ul> <li>Delete and Update/Create Deploy-Action types on same container/PDS is made possible</li> <li>Added input to filter based on artifact created or updated</li> </ul>"},{"location":"#version-4","title":"Version 4","text":"<ul> <li>Added support to optionally ignore unresolved properties</li> </ul>"},{"location":"#version-3","title":"Version 3","text":"<ul> <li>Added support to run in non zOS environment as well</li> </ul>"},{"location":"#version-1","title":"Version 1","text":"<ul> <li>Initial release</li> </ul>"},{"location":"downloads/","title":"Downloads","text":"<p>To download the plug-in, click the following version-specific links.</p> <ul> <li>ucd-plugins-zos-multi-generate-artifact-info-9.1168826.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-9.1167086.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-8.1164047.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-8.1162447.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-8.1162244.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-8.1158586.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-8.1158293.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-7.1157847.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-7.1150817.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-7.1150795.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-6.1150110.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-6.1132902.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-6.1132811.zip</li> <li>ucd-plugins-zos-multi-generate-artifact-info-5.1126660.zip</li> <li>plugins-zos-multi-generate-artifact-info-5.1121469.zip</li> <li>plugins-zos-multi-generate-artifact-info-4.1100684.zip</li> <li>plugins-zos-multi-generate-artifact-info-4.1090470.zip</li> <li>plugins-zos-multi-generate-artifact-info-3.1064503.zip</li> <li>plugins-zos-multi-generate-artifact-info-2.1062700.zip</li> <li>plugins-zos-multi-generate-artifact-info-1.1056678.zip</li> </ul>"},{"location":"steps/","title":"Steps","text":"<ul> <li>Generate Multiple Artifact Information</li> </ul>"},{"location":"steps/#note","title":"Note:","text":"<ul> <li>Deployment Action filter is applicable only if Backup is enabled in Deploy Data Sets step</li> <li>Deployment Action filter is applicable only for loop types Sequential Datasets or PDS Members</li> <li>Target Dataset Name filter is applicable for only Dataset/PDS Member loop types</li> </ul>"},{"location":"steps/#generate-multiple-artifact-information","title":"Generate Multiple Artifact Information","text":"<p>Generate multiple text information for selected version artifacts. The information is sent to the output properties for use by later steps.</p> Name Type Description Required Property Name Container Name Filter JSON String The filter to limit Source datasets in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash (/). For example, /.*LOAD/ matches any text that ends with LOAD. If the filter is not a regular expression, exact matching is used. No srcDatasetName Custom Properties Filter JSON String The filter to limit Custom properties in the template for an output property. Specify each filter in the format: propertyName=valueFilter and separate each filter with a newline character. A property without a value selects all artifacts related to the specified property. Java regular expression matching is used if the filter begins and ends with a forward slash (/). For example, developer=/M.*/ matches artifacts for the developer property where the value of the property starts with M. No custProperties Deploy Type Filter JSON String The filter to limit Deploy Types in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash (/). For example, specify /.*SRC.*/ to match any text that contains SRC. If the filter is not a regular expression, exact matching is used. No deployTypeName Deployment action Filter JSON String The filter to limit target datasets and members based on type of deployment action performed. Possible action values are \u2018created\u2019 or \u2018updated\u2019. For example: If the action value is set to \u2018created\u2019 then artifacts which are newly created in target environment are selected. Note: Action values are case insensitive. If value is empty or no value is passed then both \u2018created\u2019 and \u2018updated\u2019 artifacts are selected. No deployAction For Each Enumeration: 1) PDS member2) PDS3) Sequential Dataset4) Deleted PDS member5) Deleted PDS member - excluding missing members6) Deleted PDS7) Deleted sequential Dataset8) Directory9) File10) Deleted File11) Generic Artifact Group12) Generic Artifact Generate information for each of the selected artifact type. Yes loopType Order By Enumeration: ASCDESCSHIPLIST Order by Ascending,Descending, or Shiplist order. Yes orderBy Resource Name Filter JSON String The filter to limit PDS Members in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash(/). For example, /PGM.*/ matches any text that starts with PGM. If the filter is not a regular expression, exact matching is used. No memberName Target Data Set Name Filter JSON String The filter to limit Target datasets in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash(/). For example, /.*LOAD/ matches any text that ends with LOAD. If the filter is not a regular expression, exact matching is used. No datasetName Template JSON String Define template for each output property to generate customized text. Subsequent steps can access the customized text with <code>${p:Step-Name/output-property-name}</code>. For example: if the step name is \u2018Bind Card Generator\u2019 and output property is \u2018CicsBindText\u2019 then the property can be referred in subsequent steps as <code>${p:Bind Card Generator/CicsBindText}</code>. Add separators like comma or newline using character \u2018,\u2019 or \u2018\\n\u2019 in the template as needed. Use <code>${propname}</code> to access custom properties. The following built-in properties are available: <code>${sourceDataset}</code> for the source dataset name<code>${dataset}</code> for the target dataset name<code>${member}</code> for the member name<code>${deployType}</code> for the deployment type<code>${artifactGroup}</code> for the generic artifact group name<code>${artifact}</code> for the generic artifact name<code>${directory}</code> for the source directory name<code>${file}</code> for the file name<code>${inputsUrl}</code> for the url of the inputsAll property names are case-sensitive. Do not use the built-in names for custom properties. Yes templateText"},{"location":"usage/","title":"Usage","text":"<p>Use the Generate Multiple Artifact Information plug-in to generate one or more multiple properties from z/OS artifacts. The plug-in extracts data based on filters.</p>"},{"location":"usage/#example","title":"Example","text":"<p>This examples demonstrates using the plug-in to extract data based on filters to generate multiple templates in JSON format. The example is based on the version and containers shown below.</p> <p></p> <p>The sample JSON contains two templates assigned to properties Prop-DBRM and Prop-CICS.</p> <pre><code>{\n    \"Prop-DBRM\" : \" BIND (${member}) LIBRARY(${dataset}) \\n\" ,\n    \"Prop-CICS\" : \" CEMT SET PROGRAM(${member}) NEWC \\n\"\n}\n\n</code></pre> <ul> <li>Prop-DBRM contains each members bind statements for DB2 Binding process</li> <li>Prop-CICS contains RDO commands to set the latest copy of program in CICS</li> </ul> <p>There is a CICS program under the COBOL container with name the CARP001 as shown below.</p> <p></p> <p>To filter COBOL and DBRM containers, the JSON template in Container filter JSON can be defined as:</p> <pre><code>{\n    \"Prop-CICS\" : \"/.*COBOL/\",\n    \"Prop-DBRM\" : \"/.*DBRM/\"\n}\n</code></pre> <p>To filter member/resource name under the above container, the JSON template in Resource filter JSON can be defined as:</p> <pre><code>{\n    \"Prop-CICS\": \"CARP001\"\n}\n</code></pre> <p>After the plug-in step completes, the following output is received. Please note that in addition to Prop-CICS and Prop-DBRM, we generate an additional count (Prop-CICS-count and Prop-DBRM-count) that can be used with a \u201cswitch\u201d step in the component process to decide whether to do a bind or not.</p> <p></p> <p></p> <p>Similarly, you can deploy and custom property filters to create a template with only selected elements.</p> <p>Watch video in link below on how to migrate from regular generate artifact information step to multi artifact information step \u2013 </p> <p>Multi Generate Artifact Information Plugin</p>"}]}